const refs = {
  form: document.querySelector('form'),
  button: document.querySelector('.submit-button'),
};

const { form, button } = refs;

const colorBackground = '#fcfaf2';
const colorBorder = '2px solid #ff9662';
let data = {};
const keyLS = 'form-data';

// –ó–º—ñ–Ω–∞ –∫–æ–ª—å–æ—Ä—É
function changeBgColor(el, currentColor = colorBackground) {
  el.style.background = currentColor;
}

// –ó–º—ñ–Ω–∞ –±–æ—Ä–¥–µ—Ä—É
function changeBorderColor(el, currentColor = colorBorder) {
  el.style.border = currentColor;
}

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è LS
function saveLs(key, value) {
  localStorage.setItem(key, JSON.stringify(value));
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö LS
function loadLs(key) {
  return JSON.parse(localStorage.getItem(key));
}

// –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
const lsData = loadLs(keyLS);
if (lsData) {
  Object.entries(lsData).forEach(([name, value]) => {
    const input = document.querySelector(`.form-input[name="${name}"]`);
    if (input) {
      input.value = value;
      changeBgColor(input);
      data[name] = value;
    }
  });
}

// –°–ª—É—Ö–∞—î–º–æ –∑–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ–Ω–ø—É—Ç—ñ–≤
form.addEventListener('input', event => {
  const input = event.target;
  if (!input.classList.contains('form-input')) return;

  const { name, value } = input;

  if (value.trim()) {
    data[name] = value;
    changeBgColor(input);
    changeBorderColor(input, '1px solid #ded47b');
  } else {
    delete data[name];
    changeBorderColor(input, colorBorder);
    changeBgColor(input, '#FFF');
  }

  // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–± º—î–¥–Ω–∞–Ω—ñ –¥–∞–Ω—ñ (—Ñ–æ—Ä–º–∞ + –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—É, —è–∫—â–æ –≤–∂–µ —î)
  const prev = loadLs(keyLS) || {};
  const merged = { ...prev, ...data };
  saveLs(keyLS, merged);
});

// –°–∞–±–º—ñ—Ç–∏–º–æ —Ñ–æ—Ä–º—É
button.addEventListener('click', handlerSubmit);

function handlerSubmit(e) {
  e.preventDefault();

  const objLength = Object.keys(data).length;
  if (objLength !== 6) {
    alert('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –¥–∞–Ω—ñ —É —Ç–∞–±–ª–∏—Ü—ñ!');
    return;
  }

  // üí• –û—á–∏—â–∞—î–º–æ –≤—Å–µ
  localStorage.removeItem(keyLS);

  console.log('–î–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ:', data);

  // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
  Array.from(form.elements).forEach(el => {
    if (el.classList.contains('form-input')) {
      el.value = '';
      changeBgColor(el, 'var(--white)');
    }
  });

  data = {}; // –û—á–∏—â—É—î–º–æ –æ–± º—î–∫—Ç

  alert('–§–æ—Ä–º–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úÖ');
}
console.log(data);
console.log(localStorage.getItem(keyLS));
